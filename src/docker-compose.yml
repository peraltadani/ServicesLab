networks:
  backend:
services:
  gateway.api:
    image: ${DOCKER_REGISTRY-}gatewayapi
    build:
      context: .
      dockerfile: Services/Gateway/Dockerfile
    ports:
       - 5000:5000
       - 5001:5001
    networks: 
       - backend
  insumosdb:
    container_name: insumos-sql-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
       - 8006:1433
    environment:
       - ACCEPT_EULA=Y
       - MSSQL_SA_PASSWORD=MyPassword*1234
    volumes:
       - ./Services/Insumos/Insumos.DB/bin/Debug:/docker-entrypoint-initdb.d
    networks: 
       - backend
  insumosdb.config:
    container_name: insumos-sql-db-config
    image: mcr.microsoft.com/mssql/server:2022-latest
    depends_on:
       - insumosdb
    volumes:
       - ./Services/Insumos/Insumos.DB/bin/Debug:/docker-entrypoint-initdb.d
    networks: 
       - backend
    command: 
       "bash -c '/opt/mssql-tools18/bin/sqlcmd -C -S insumosdb -U sa -P MyPassword*1234 -d master -i /docker-entrypoint-initdb.d/Insumos.DB_Create.sql'"
  insumos.api:
    image: ${DOCKER_REGISTRY-}insumosapi
    build:
      context: .
      dockerfile: Services/Insumos/Insumos.Api/Dockerfile
    ports:
       - 5100:5100
       - 5101:5101
    hostname: insumos.api
    networks:
       - backend
    depends_on:
       - insumosdb
  ventasdb:
    container_name: ventas-sql-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
       - 8007:1433
    environment:
       - ACCEPT_EULA=Y
       - MSSQL_SA_PASSWORD=MyPassword*1234
    volumes:
       - ./Services/Ventas/Ventas.DB/bin/Debug:/docker-entrypoint-initdb.d
    networks: 
       - backend
  ventasdb.config:
    container_name: ventas-sql-db-config
    image: mcr.microsoft.com/mssql/server:2022-latest
    depends_on:
       - ventasdb
    volumes:
       - ./Services/Ventas/Ventas.DB/bin/Debug:/docker-entrypoint-initdb.d
    networks: 
       - backend
    command: 
       "bash -c '/opt/mssql-tools18/bin/sqlcmd -C -S ventasdb -U sa -P MyPassword*1234 -d master -i /docker-entrypoint-initdb.d/Ventas.DB_Create.sql'"
  ventas.api:
    image: ${DOCKER_REGISTRY-}ventasapi
    build:
      context: .
      dockerfile: Services/Ventas/Ventas.Api/Dockerfile
    ports:
       - 5200:5200
       - 5201:5201
    hostname: ventas.api
    networks:
       - backend
    depends_on:
       - ventasdb
  catalog-db:
    image: mongo
    environment:
      # MONGO_INITDB_ROOT_USERNAME: root
      # MONGO_INITDB_ROOT_PASSWORD: todo
      MONGO_INITDB_DATABASE: catalog
    ports:
      - '27017:27017'
  rabbitmq:
    image: rabbitmq:management-alpine
    environment:
      - todo
    expose:
      - "5672"
    ports:
      - 8012:15672


 


